name: macos-build

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        include:
          - os: macos-10.15
            amd_asset_name: csml-server-macos-amd64
            amd_cli_asset_name: csml-cli-macos-amd64
            arm_asset_name: csml-server-macos-arm64
            arm_cli_asset_name: csml-cli-macos-arm64

    steps:
    - uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-csml-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install postgres
      run: |
        /usr/local/opt/postgres/bin/pg_ctl -D /usr/local/var/postgres start
        sleep 3
        /usr/local/opt/postgres/bin/createuser -s postgres

    - name: Install Rust Stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-apple-darwin
        override: true


    - name: (AMD) Build Server
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path=csml_server/Cargo.toml --features csml_engine/mongo,csml_engine/dynamo,csml_engine/postgresql,csml_engine/sqlite

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.amd_asset_name }}
        path: target/release/csml_server

    - name: (AMD) Build Cli
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path=csml_cli/Cargo.toml --features csml_engine/mongo,csml_engine/dynamo,csml_engine/postgresql,csml_engine/sqlite

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.amd_cli_asset_name }}
        path: target/release/csml

    - name: Set environment variables for the build
      run: |
        echo "SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)" >> $GITHUB_ENV
        echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)" >> $GITHUB_ENV

    - name: (ARM) Build Server
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path=csml_server/Cargo.toml --features csml_engine/mongo,csml_engine/dynamo,csml_engine/sqlite --target=aarch64-apple-darwin

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.arm_asset_name }}
        path: target/aarch64-apple-darwin/release/csml_server

    - name: (ARM) Build CLI
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path=csml_cli/Cargo.toml --features csml_engine/mongo,csml_engine/dynamo,csml_engine/sqlite --target=aarch64-apple-darwin

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.arm_cli_asset_name }}
        path: target/aarch64-apple-darwin/release/csml


  publish-binaries:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [macos-10.15]
        include:
          - os: macos-10.15
            amd_asset_name: csml-server-macos-amd64
            amd_cli_asset_name: csml-cli-macos-amd64
            arm_asset_name: csml-server-macos-arm64
            arm_cli_asset_name: csml-cli-macos-arm64

    steps:
      - run: mkdir -p target/release
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.amd_asset_name }}
          path: target/release

      - name: Upload MacOS AMD binary to release
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/csml_server
          asset_name: ${{ matrix.amd_asset_name }}
          tag: ${{ github.ref }}
          overwrite: true

      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.amd_cli_asset_name }}
          path: target/release

      - name: Upload MacOS AMD CLI binary to release
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/csml
          asset_name: ${{ matrix.amd_cli_asset_name }}
          tag: ${{ github.ref }}
          overwrite: true


      - run: mkdir -p target/aarch64-apple-darwin/release
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.arm_asset_name }}
          path: target/aarch64-apple-darwin/release

      - name: Upload MacOS ARM binary to release
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-darwin/release/csml_server
          asset_name: ${{ matrix.arm_asset_name }}
          tag: ${{ github.ref }}
          overwrite: true

      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.arm_cli_asset_name }}
          path: target/aarch64-apple-darwin/release

      - name: Upload MacOS ARM CLI binary to release
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-darwin/release/csml
          asset_name: ${{ matrix.arm_cli_asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
